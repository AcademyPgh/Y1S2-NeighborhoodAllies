@model ImpactMap.Controllers.CategoryViewModel

@{
    ViewBag.Title = "Create";
}

<h2>Create</h2>

@using (Html.BeginForm())
{
    @Html.AntiForgeryToken()

    <div class="form-horizontal">
        <h4>Tag</h4>
        <hr />
        @Html.ValidationSummary(true, "", new { @class = "text-danger" })
        <div class="form-group">
            @Html.LabelFor(model => model.Category.name, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.Category.name, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.Category.name, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.Metrics, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                <div id="displayMetrics">
                </div>
                <label>Enter Metric</label>
                <input type="text" id="metrics" /> <i class="fa fa-plus-circle" aria-hidden="true" id="addMetric"></i><br>
                <input name="newMetrics" id="newMetrics" type="hidden" />
            </div>
        </div>


        <div class="form-group">
            <div class="col-md-offset-2 col-md-10">
                <input type="submit" value="Create" class="btn btn-default" />
            </div>
        </div>

    </div>
}

<div class="addpadding">
    @Html.ActionLink("Back to List", "Index")
</div>

@section Scripts {
    @Scripts.Render("~/bundles/jqueryval")

    <script>
        newMetrics = [];

        //This Works
        function addMetrics() {
            if ($('#metrics').val() != "") {
                newMetrics.push($('#metrics').val()); //pushes the metric into the newMetrics array
                $('#displayMetrics').append('<span class="removeMetric" id="' + $('#metrics').val() + '"><i class="fa fa-minus-circle" aria-hidden="true"></i>' + $('#metrics').val() + '</span><br>');//Adds the new metric to the display
                $('#metrics').val("");//Clears the value of the input box to accept a new metric
                $('#newMetrics').val(newMetrics.toString());//Converts newMetrics array to string and puts it into the hidden input
                $('.removeMetric').click(function () { removeMetrics(this.id) });
                console.log($('#newMetrics').val())
            }
        };

        //This works too!
        function removeMetrics(id) {
            var i = newMetrics.indexOf(id); //How do I know which one to remove since there is no id?
            newMetrics.splice(i, 1);
            $('#newMetrics').val(newMetrics.toString());
            $('#' + id).remove();
            console.log('Removed:' + newMetrics.toString());
        };



        $('#addMetric').click(addMetrics);


        //TODO This does not work
        $(document).ready(function () {
            $(window).keydown(function (event) {
                if (event.keyCode == 13) {
                    event.preventDefault();
                    $('#metrics').keypress(function (e) {
                        var key = e.which;
                        if (key == 13)  // the enter key code

                        {
                            addMetrics();
                        }

                    });

                }
            })
        })
    
    
    </script>
}
