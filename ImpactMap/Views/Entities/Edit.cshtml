@model ImpactMap.Models.Entity

@{
    ViewBag.Title = "Edit Organization Details";
}

<div class="container">
    <div class="pageInfo">
        <h2>@ViewBag.Title</h2>

        <div class="subNav">

            <a href=@Url.Action("Index", "Dashboard")><i class="fa fa-tachometer" aria-hidden="true" title="Return to Dashboard"></i></a>

        </div>
    </div>

    @using (Html.BeginForm())
            {
        @Html.AntiForgeryToken()

        <div class="form-horizontal">
            <hr />
            @Html.ValidationSummary(true, "", new { @class = "text-danger" })
            @Html.HiddenFor(model => model.ID)

            <div class="col-md-6">

                <div class="form-group">
                    @Html.LabelFor(model => model.name, htmlAttributes: new { @class = "control-label" })

                    @Html.EditorFor(model => model.name, new { htmlAttributes = new { @class = "form-control" } })
                    @Html.ValidationMessageFor(model => model.name, "", new { @class = "text-danger" })

                </div>

                <div class="form-group">
                    @Html.LabelFor(model => model.description, htmlAttributes: new { @class = "control-label" })

                    @Html.EditorFor(model => model.description, new { htmlAttributes = new { @class = "form-control" } })
                    @Html.ValidationMessageFor(model => model.description, "", new { @class = "text-danger" })

                </div>

                <div class="form-group">

                    <input type="submit" value="Save" class="button" />
                    @Html.ActionLink("Return to Dashboard", "Index", "Dashboard", new { @class = "button btn-default" })

                </div>

            </div>

            <div class="col-md-6">

                <div class="form-group">
                    @Html.LabelFor(model => model.address1, htmlAttributes: new { @class = "control-label" })

                    @Html.EditorFor(model => model.address1, new { htmlAttributes = new { @class = "form-control" } })
                    @Html.ValidationMessageFor(model => model.address1, "", new { @class = "text-danger" })

                </div>

                <div class="form-group">
                    @Html.LabelFor(model => model.address2, htmlAttributes: new { @class = "control-label" })

                    @Html.EditorFor(model => model.address2, new { htmlAttributes = new { @class = "form-control" } })
                    @Html.ValidationMessageFor(model => model.address2, "", new { @class = "text-danger" })

                </div>

                <div class="form-group">
                    @Html.LabelFor(model => model.city, htmlAttributes: new { @class = "control-label" })

                    @Html.EditorFor(model => model.city, new { htmlAttributes = new { @class = "form-control" } })
                    @Html.ValidationMessageFor(model => model.city, "", new { @class = "text-danger" })

                </div>

                <div class="form-group">
                    @Html.LabelFor(model => model.state, htmlAttributes: new { @class = "control-label" })

                    @Html.EditorFor(model => model.state, new { htmlAttributes = new { @class = "form-control" } })
                    @Html.ValidationMessageFor(model => model.state, "", new { @class = "text-danger" })

                </div>

                <div class="form-group">
                    @Html.LabelFor(model => model.zip, htmlAttributes: new { @class = "control-label" })

                    @Html.EditorFor(model => model.zip, new { htmlAttributes = new { @class = "form-control" } })
                    @Html.ValidationMessageFor(model => model.zip, "", new { @class = "text-danger" })

                </div>



            </div>
        </div>
    }



    <div class="addpadding">

    </div>
</div>