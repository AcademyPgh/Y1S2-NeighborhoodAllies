@model ImpactMap.Controllers.InvestmentViewModel


@{
    ViewBag.Title = "Create";
}

<h2>Create</h2>

@using (Html.BeginForm())
{
    @Html.AntiForgeryToken()

    <div class="form-horizontal">
        <h4>Investment</h4>
        <hr />
        @Html.ValidationSummary(true, "", new { @class = "text-danger" })
        <div class="form-group">
            @Html.LabelFor(model => model.Investment.amount, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.Investment.amount, new { htmlAttributes = new { @type = "number", @min = "0.01", @step = "0.01", @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.Investment.amount, "", new { @class = "text-danger" })
            </div>
        </div>


        <div class="form-group">
            @Html.LabelFor(model => model.Investment.entityTo, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                <select name="entityTo_ID" id="recipientSelect">
                    @foreach (var entity in Model.Entities)
                    {
                        <option value=@entity.ID>@entity.name</option>
                    }
                </select>

            </div>
        </div>

        <div class="form-group">
            @*I put the following line in - it is not the same as John's*@
            @Html.LabelFor(model => model.Investment.categories, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                <div id="CatList"></div>
                <input name="categories" id="categories" type="hidden" />
            </div>
        </div>





        @*************************************@


        <div class="form-group">
            @Html.LabelFor(model => model.Investment.date, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.Investment.date, new { htmlAttributes = new { @type = "date", @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.Investment.date, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.Investment.isInKind, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                <div class="checkbox">
                    @Html.EditorFor(model => model.Investment.isInKind)
                    @Html.ValidationMessageFor(model => model.Investment.isInKind, "", new { @class = "text-danger" })
                </div>
            </div>
        </div>

        <div class="form-group hideFormField" id="VolunteerContainer">
            @Html.LabelFor(model => model.Investment.volunteerHours, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.Investment.volunteerHours, new { htmlAttributes = new { @type = "number", @step = "1", @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.Investment.volunteerHours, "", new { @class = "text-danger" })
            </div>
        </div>


        <!--TODO - Needs to populate only projects from the signed in entity-->
        <div class="form-group">
            @Html.LabelFor(model => model.Investment.projectFrom, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                <select name="projectFrom_ID">
                    @foreach (var project in Model.Projects)
                    {
                        <option value=@project.ID>@project.name</option>
                    }
                </select>
                @Html.ValidationMessageFor(model => model.Investment.projectFrom_ID, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.Investment.projectTo, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                <select name="projectTo_ID" id="ProjectToDropdown"></select>
            </div>
        </div>


        <div class="form-group">
            <div class="col-md-offset-2 col-md-10">
                <input type="submit" value="Create" class="btn btn-default" />
            </div>
        </div>
    </div>
}

<div>
    @Html.ActionLink("Back to List", "Index")
</div>


@section Scripts {
    @Scripts.Render("~/bundles/jqueryval")

    <script>

        selectedCategories = [];
        function load_categories() {
            $.ajax({
                url: '/public/categories',
                type: 'GET',
                success: function (data) {
                    $('#CatList').html('<ul>');
                    data.map(function (category) {
                        $('#CatList').append('<li id="cat' + category.ID + '" data-id=' + category.ID + '><span id="catspan' + category.ID + '"></span>' + category.name + '</li>');
                        $('#cat' + category.ID).click(function () { toggle_category(category.ID); });
                    });
                    $('#CatList').append('</ul>');
                }
            })
        }

        function toggle_category(id) {
            // if it is not there
            // add the hidden input element
            // add the checkmark to the category
            if (!$('#catspan' + id).hasClass('fa fa-check')) {
                selectedCategories.push(id);
                $('#categories').val(selectedCategories.toString());
                $('#catspan' + id).addClass('fa fa-check');
            }
            else {

                // if it is there
                // remove the hidden input element
                // remove the checkmark on the category
                var i = selectedCategories.indexOf(id);
                selectedCategories.splice(i, 1);
                $('#categories').val(selectedCategories.toString());
                $('#catadd' + id).remove();
                $('#catspan' + id).removeClass('fa fa-check');

            }
        }

        //Cause the Volunteer Hours input box to show if In Kind checkbox is checked
        function addVolunteerHours() {
            $('#Investment_isInKind').click(function () {
                if ($('#VolunteerContainer').hasClass('hideFormField')) {
                    $('#VolunteerContainer').removeClass('hideFormField')
                    $('#VolunteerContainer').addClass('showFormField')
                }
                else {
                    $('#VolunteerContainer').removeClass('showFormField')
                    $('#VolunteerContainer').addClass('hideFormField')
                }
            });
        }

        $('#recipientSelect').change(updateProjectsOut);

        //messing around with an ajax post
        function sendRecipientID() {
            $.ajax({
                url: '/Entities/GetProjectsOut/',
                type: 'post',
                success: function () {
                    var ID = $('#recipientSelect').html();
                //The part where it would send ID to Entities/GetProjectsOut
                }
            });
        };

        //at this moment getting an error 500 internal server error
        function updateProjectsOut() {
            $.ajax({
                url: '/Entities/GetProjectsOut/',
                type: 'get',
                success: function (data) {
                    var html = '';
                    data.map(function (projectMap) {
                        //html += '<li>' + replayEvent.DisplayName + '<span data-id=' + replayEvent.Id + ' class="DeleteButton btn btn-primary">Delete</span></li>'
                        html += '<option value=' + projectMap.ID + '>' + projectMap.name + '</option>'
                    });
                    $('#ProjectToDropdown').html(html);
                }
            });
        };

        function initialize() {
            load_categories();
            addVolunteerHours();
            updateProjectsOut();
        }

        $(initialize);
    </script>
}
